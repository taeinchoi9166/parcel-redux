{"id":"node_modules/react-redux/es/hooks/useDispatch.js","dependencies":[{"name":"C:\\Users\\user\\WebstormProjects\\parcel-redux\\package.json","includedInParent":true,"mtime":1564099689214},{"name":"C:\\Users\\user\\WebstormProjects\\parcel-redux\\.babelrc","includedInParent":true,"mtime":1564099682093},{"name":"C:\\Users\\user\\WebstormProjects\\parcel-redux\\node_modules\\react-redux\\package.json","includedInParent":true,"mtime":1564099688018},{"name":"./useStore","loc":{"line":1,"column":25},"parent":"C:\\Users\\user\\WebstormProjects\\parcel-redux\\node_modules\\react-redux\\es\\hooks\\useDispatch.js","resolved":"C:\\Users\\user\\WebstormProjects\\parcel-redux\\node_modules\\react-redux\\es\\hooks\\useStore.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDispatch = useDispatch;\n\nvar _useStore = require(\"./useStore\");\n\n/**\r\n * A hook to access the redux `dispatch` function. Note that in most cases where you\r\n * might want to use this hook it is recommended to use `useActions` instead to bind\r\n * action creators to the `dispatch` function.\r\n *\r\n * @returns {any|function} redux store's `dispatch` function\r\n *\r\n * @example\r\n *\r\n * import React, { useCallback } from 'react'\r\n * import { useReduxDispatch } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const dispatch = useDispatch()\r\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\r\n *   return (\r\n *     <div>\r\n *       <span>{value}</span>\r\n *       <button onClick={increaseCounter}>Increase counter</button>\r\n *     </div>\r\n *   )\r\n * }\r\n */\nfunction useDispatch() {\n  var store = (0, _useStore.useStore)();\n  return store.dispatch;\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/react-redux/es/hooks/useDispatch.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/react-redux/es/hooks/useDispatch.js","original":{"line":2,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/react-redux/es/hooks/useDispatch.js","original":{"line":26,"column":7}},{"name":"useDispatch","generated":{"line":33,"column":9},"source":"node_modules/react-redux/es/hooks/useDispatch.js","original":{"line":26,"column":16}},{"generated":{"line":33,"column":20},"source":"node_modules/react-redux/es/hooks/useDispatch.js","original":{"line":26,"column":7}},{"generated":{"line":33,"column":23},"source":"node_modules/react-redux/es/hooks/useDispatch.js","original":{"line":26,"column":30}},{"generated":{"line":34,"column":0},"source":"node_modules/react-redux/es/hooks/useDispatch.js","original":{"line":27,"column":2}},{"name":"store","generated":{"line":34,"column":6},"source":"node_modules/react-redux/es/hooks/useDispatch.js","original":{"line":27,"column":6}},{"generated":{"line":34,"column":11},"source":"node_modules/react-redux/es/hooks/useDispatch.js","original":{"line":27,"column":11}},{"generated":{"line":34,"column":14},"source":"node_modules/react-redux/es/hooks/useDispatch.js","original":{"line":27,"column":14}},{"generated":{"line":34,"column":39},"source":"node_modules/react-redux/es/hooks/useDispatch.js","original":{"line":27,"column":2}},{"generated":{"line":35,"column":0},"source":"node_modules/react-redux/es/hooks/useDispatch.js","original":{"line":28,"column":2}},{"name":"store","generated":{"line":35,"column":9},"source":"node_modules/react-redux/es/hooks/useDispatch.js","original":{"line":28,"column":9}},{"generated":{"line":35,"column":14},"source":"node_modules/react-redux/es/hooks/useDispatch.js","original":{"line":28,"column":14}},{"name":"dispatch","generated":{"line":35,"column":15},"source":"node_modules/react-redux/es/hooks/useDispatch.js","original":{"line":28,"column":15}},{"generated":{"line":35,"column":23},"source":"node_modules/react-redux/es/hooks/useDispatch.js","original":{"line":28,"column":2}},{"generated":{"line":36,"column":0},"source":"node_modules/react-redux/es/hooks/useDispatch.js","original":{"line":29,"column":1}}],"sources":{"node_modules/react-redux/es/hooks/useDispatch.js":"import { useStore } from './useStore';\r\n/**\r\n * A hook to access the redux `dispatch` function. Note that in most cases where you\r\n * might want to use this hook it is recommended to use `useActions` instead to bind\r\n * action creators to the `dispatch` function.\r\n *\r\n * @returns {any|function} redux store's `dispatch` function\r\n *\r\n * @example\r\n *\r\n * import React, { useCallback } from 'react'\r\n * import { useReduxDispatch } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const dispatch = useDispatch()\r\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\r\n *   return (\r\n *     <div>\r\n *       <span>{value}</span>\r\n *       <button onClick={increaseCounter}>Increase counter</button>\r\n *     </div>\r\n *   )\r\n * }\r\n */\r\n\r\nexport function useDispatch() {\r\n  var store = useStore();\r\n  return store.dispatch;\r\n}"},"lineCount":null}},"error":null,"hash":"2d6caecb0f721a13fb37e7718834531e","cacheData":{"env":{}}}